---
layout: post
title:  "Week 13"
date:   2018-08-17 14:10:51 +0530
categories: GSoC
tags: JuliaCon-2018
description: JuliaCon 2018
---

The coding period ends on 6<sup>th</sup> August. Julia's GSoC were invited to attend JuliaCon 2018. The Julia Project and NUMFocus sponsored our attendance by providing $1600 to cover my expenses and a free JuliaCon ticket.

JuliaCon 2018 was held in University College London from 7<sup>th</sup> August to 11<sup>th</sup> August.

## Poster Presentation


<img src="{{ site.baseurl }}/assets/images/presentation.jpeg" width="230" height="230" />

My role was to create a poster that summarises my project. My poster can be found [here](https://github.com/SohamTamba/GSoC/blob/gh-pages/Poster.pdf). The questions asked during my poster session we usually of the form:

1. Clarification of the benchmarks.
2. Modifications made to parallel implementations.
3. Challenges faced and barriers to obtaining further improvements.
4. Does my project support Out of Core Computation? (It does not)

Judging from the audience's interest in Out of Core Computation, producing [external memory implementations](https://en.wikipedia.org/wiki/External_memory_algorithm) of graph algorithms might be a good idea GSoC 2019 project. It would likely be popular with the community but check in with us through the slack channel at that time.

The answers to the first 3 questions can easily be found in this blog.

Example: **Parallel BFS**

**Clarification of benchmarks**

Benchmarks were conducted on *Twitter Social Circles* Graph, *Astro-Physics Collaboration* Graph, *Facebook Social Circles* Graph and the ratio of the run-time of the sequential implementation to the run-time of the parallel implementation (with dynamic load-balancing) was displayed.

**Modifications made to parallel implementations**

For BFS, a single "current queue" and "next queue" is maintained. In each level iteration, the vertices in the "current queue" are iterated over and if any of these vertices have a neighbor has not been "seen" in a previous level iteration, it is added to the "next queue".


For parallel BFS, each thread is provided its own "current queue" and "next queue". When a thread has iterated over all the vertices in its own "current queue", it tries to "steal" the vertices in an unfinished thread's "current queue".

**Challenges faced and barriers to obtaining further improvements**

Dynamic Memory Allocation (`push!`) is not thread-safe. This implies we cannot change the size of the queue during a level iteration and each queue is initialised to its maximum capacity. Hence, the memory use-age is `2*vertices(g)*nthreads()*size_of_vertex`. If Dynamic Memory Allocation were thread-safe, the memory use-age could have been reduced to ``2*vertices(g)*size_of_vertex`. This ruins the cache-efficiency of the implementation.

## Talks

The most common activity during JuliaCon were its talks.

A play list of the [JuliaCon 2018 talks](https://www.youtube.com/watch?v=1jN5wKvN-Uk&list=PLP8iPy9hna6Qsq5_-zrg0NTwqDSDYtfQB) is available on YouTube.
But trust me, listening to the talks in person is a completely different experience from watching it online.

Two talks that I recommend are:

1. [A Conversation with Glibert Strang](https://www.youtube.com/watch?v=gGYcSjrqbjc)
2. [The Future of Microprocessors](https://www.youtube.com/watch?v=zX4ZNfvw1cw)

## Interactions

I tried to meet as many attendees as I could during the conference. 

I was able to obtain career advice and perspective from researchers present at the conference, such as [Pontus Stenetorp](https://pontus.stenetorp.se/) who works on Natural Language Processing. 

I had a brief but memorable discussion with Gilbert Strang, a researcher working in Linear Algebra that has posted a huge amount of educational material online.

<img src="{{ site.baseurl }}/assets/images/gil.jpeg" width="270" height="230" />

Most of my interactions were with the other GSoC students present at the conference. Other than discussing our projects and careers, we would have an outing to a park or museum at the end of each day. 

## Acknowlegements

I would like to thank `The Julia Project` and `NUMFocus` for sponsoring my attendance to JuliaCon 2018.